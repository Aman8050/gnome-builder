/*
 * Generated by gdbus-codegen 2.37.8. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef ____DBUS_GB_DBUS_TYPELIB_H__
#define ____DBUS_GB_DBUS_TYPELIB_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.Builder.Typelib */

#define GB_DBUS_TYPE_TYPELIB (gb_dbus_typelib_get_type ())
#define GB_DBUS_TYPELIB(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GB_DBUS_TYPE_TYPELIB, GbDBusTypelib))
#define GB_DBUS_IS_TYPELIB(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GB_DBUS_TYPE_TYPELIB))
#define GB_DBUS_TYPELIB_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GB_DBUS_TYPE_TYPELIB, GbDBusTypelibIface))

struct _GbDBusTypelib;
typedef struct _GbDBusTypelib GbDBusTypelib;
typedef struct _GbDBusTypelibIface GbDBusTypelibIface;

struct _GbDBusTypelibIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_require) (
    GbDBusTypelib *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name,
    const gchar *arg_version);

};

GType gb_dbus_typelib_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *gb_dbus_typelib_interface_info (void);
guint gb_dbus_typelib_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void gb_dbus_typelib_complete_require (
    GbDBusTypelib *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void gb_dbus_typelib_call_require (
    GbDBusTypelib *proxy,
    const gchar *arg_name,
    const gchar *arg_version,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gb_dbus_typelib_call_require_finish (
    GbDBusTypelib *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gb_dbus_typelib_call_require_sync (
    GbDBusTypelib *proxy,
    const gchar *arg_name,
    const gchar *arg_version,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GB_DBUS_TYPE_TYPELIB_PROXY (gb_dbus_typelib_proxy_get_type ())
#define GB_DBUS_TYPELIB_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GB_DBUS_TYPE_TYPELIB_PROXY, GbDBusTypelibProxy))
#define GB_DBUS_TYPELIB_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GB_DBUS_TYPE_TYPELIB_PROXY, GbDBusTypelibProxyClass))
#define GB_DBUS_TYPELIB_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GB_DBUS_TYPE_TYPELIB_PROXY, GbDBusTypelibProxyClass))
#define GB_DBUS_IS_TYPELIB_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GB_DBUS_TYPE_TYPELIB_PROXY))
#define GB_DBUS_IS_TYPELIB_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GB_DBUS_TYPE_TYPELIB_PROXY))

typedef struct _GbDBusTypelibProxy GbDBusTypelibProxy;
typedef struct _GbDBusTypelibProxyClass GbDBusTypelibProxyClass;
typedef struct _GbDBusTypelibProxyPrivate GbDBusTypelibProxyPrivate;

struct _GbDBusTypelibProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GbDBusTypelibProxyPrivate *priv;
};

struct _GbDBusTypelibProxyClass
{
  GDBusProxyClass parent_class;
};

GType gb_dbus_typelib_proxy_get_type (void) G_GNUC_CONST;

void gb_dbus_typelib_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GbDBusTypelib *gb_dbus_typelib_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GbDBusTypelib *gb_dbus_typelib_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void gb_dbus_typelib_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GbDBusTypelib *gb_dbus_typelib_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GbDBusTypelib *gb_dbus_typelib_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GB_DBUS_TYPE_TYPELIB_SKELETON (gb_dbus_typelib_skeleton_get_type ())
#define GB_DBUS_TYPELIB_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GB_DBUS_TYPE_TYPELIB_SKELETON, GbDBusTypelibSkeleton))
#define GB_DBUS_TYPELIB_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GB_DBUS_TYPE_TYPELIB_SKELETON, GbDBusTypelibSkeletonClass))
#define GB_DBUS_TYPELIB_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GB_DBUS_TYPE_TYPELIB_SKELETON, GbDBusTypelibSkeletonClass))
#define GB_DBUS_IS_TYPELIB_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GB_DBUS_TYPE_TYPELIB_SKELETON))
#define GB_DBUS_IS_TYPELIB_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GB_DBUS_TYPE_TYPELIB_SKELETON))

typedef struct _GbDBusTypelibSkeleton GbDBusTypelibSkeleton;
typedef struct _GbDBusTypelibSkeletonClass GbDBusTypelibSkeletonClass;
typedef struct _GbDBusTypelibSkeletonPrivate GbDBusTypelibSkeletonPrivate;

struct _GbDBusTypelibSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GbDBusTypelibSkeletonPrivate *priv;
};

struct _GbDBusTypelibSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType gb_dbus_typelib_skeleton_get_type (void) G_GNUC_CONST;

GbDBusTypelib *gb_dbus_typelib_skeleton_new (void);


G_END_DECLS

#endif /* ____DBUS_GB_DBUS_TYPELIB_H__ */
