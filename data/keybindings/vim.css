@binding-set builder-vim-source-view
{
  bind "Escape" { "set-mode" ("vim-normal", permanent) };
}

@binding-set builder-vim-source-view-normal
{
  /*
   * Sequences to get into insert mode from normal mode.
   */

  /* insert at cursor */
  bind "i" { "set-mode" ("vim-insert", permanent) };

  /* insert after cursor */
  bind "a" { "set-mode" ("vim-insert", permanent)
             "movement" (next-char, 0) };

  /* insert at first non-whitespace character */
  bind "<shift>i" { "set-mode" ("vim-insert", permanent)
                    "movement" (first-nonspace-char, 0) };

  /* insert line after current, insert mode */
  bind "o" { "set-mode" ("vim-insert", permanent)
             "movement" (first-char, 0)
             "insert-at-cursor" ("\n") };

  /* insert line before current */
  bind "<shift>o" { "set-mode" ("vim-insert", permanent)
                    "movement" (first-char, 0)
                    "insert-at-cursor" ("\n")
                    "move-cursor" (display-lines, -1, 0) };

  /* swallow the current character and go to insert */
  bind "s" { "set-mode" ("vim-insert", permanent)
             "delete-from-cursor" (chars, 1) };

  /* move by character, captive to current line */
  bind "h" { "movement" (previous-char, 0) };
  bind "l" { "movement" (next-char, 0) };

  /* move by line, keep current line offset */
  bind "k" { "movement" (previous-line, 0) };
  bind "j" { "movement" (next-line, 0) };

  /* move by word starts */
  bind "b" { "movement" (previous-word-start, 0) };
  bind "w" { "movement" (next-word-start, 0) };

  /* move to special sub-mode 'g' */
  bind "g" { "set-mode" ("vim-normal-g", permanent) };

  /* move by word ends */
  bind "e" { "movement" (next-word-end, 0) };

  /* page movements */
  bind "<ctrl>b" { "movement" (page-up, 0) };
  bind "<ctrl>f" { "movement" (page-down, 0) };
  bind "<ctrl>u" { "movement" (half-page-up, 0) };
  bind "<ctrl>d" { "movement" (half-page-down, 0) };

  /* screen movements, keeping cursor locked to visible region */
  bind "<ctrl>e" { "movement" (screen-up, 0) };
  bind "<ctrl>y" { "movement" (screen-down, 0) };
  bind "z" { "set-mode" ("vim-normal-z", transient) };

  /* move by paragraph */
  bind "bracketleft" { "movement" (previous-paragraph, 0) };
  bind "bracketright" { "movement" (next-paragraph, 0) };

  /* move by sentance */
  bind "parenleft" { "movement" (previous-sentance, 0) };
  bind "parenright" { "movement" (next-sentance, 0) };

  /* move to line offset of zero, and first non-whitespace char, end of line */
  bind "0" { "movement" (first-char, 0) };
  bind "<shift>asciicircum" { "movement" (first-nonspace-char, 0) };
  bind "dollar" { "movement" (last-char, 0) };
  bind "bar" { "movement" (nth-char, 0) };

  /* jump to match of brace/bracket/comment/etc */
  bind "percent" { "movement" (match-special, 0) };

  /* move based on visible screen area */
  bind "<shift>h" { "movement" (screen-top, 0) };
  bind "<shift>m" { "movement" (screen-middle, 0) };
  bind "<shift>l" { "movement" (screen-bottom, 0) };

  /* move to nth line, defaults to last */
  bind "<shift>g" { "movement" (nth-line, 0) };

  /* Undo & Redo */
  bind "u" { "undo" () };
  bind "<ctrl>R" { "redo" () };

  /* delete */
  bind "x" { "movement" (next-char, 1)
             "copy-clipboard" ()
             "delete-from-cursor" (chars, 1) };
  bind "<shift>x" { "movement" (previous-char, 1)
                    "copy-clipboard" ()
                    "delete-from-cursor" (chars, 1) };

  /* copy */
  bind "y" { "set-mode" ("vim-normal-y", transient) };
  bind "<shift>y" { "save-cursor" ()
                    "set-mode" ("vim-visual-line")
                    "copy-clipboard" ()
                    "set-mode" ("vim-normal")
                    "restore-cursor" () };

  /* visual mode transition */
  bind "v" { "movement" (next-char, 1)
             "set-mode" ("vim-visual") };
  bind "<shift>v" { "set-mode" ("vim-visual-line") };
  bind "<ctrl>v" { "set-mode" ("vim-visual-block") };
}

@binding-set builder-vim-source-view-normal-z
{
  bind "z" { "movement" (scroll-screen-center, 0) };
  bind "t" { "movement" (scroll-screen-top, 0) };
  bind "b" { "movement" (scroll-screen-bottom, 0) };
}

@binding-set builder-vim-source-view-normal-y
{
  bind "y" { "save-cursor" ()
             "movement" (first-char, 0)
             "movement" (last-char, 1)
             "move-cursor" (visual-positions, 1, 1)
             "copy-clipboard" ()
             "restore-cursor" () };
}

@binding-set builder-vim-source-view-normal-g
{
  bind "g" { "movement" (first-line, 0)
             "set-mode" ("vim-normal", permanent) };
  bind "m" { "movement" (middle-char, 0)
             "set-mode" ("vim-normal", permanent) };
}

@binding-set builder-vim-source-view-normal-number
{
}

@binding-set builder-vim-source-view-insert
{
}

@binding-set builder-vim-source-view-visual
{
}

@binding-set builder-vim-source-view-visual-line
{
}

@binding-set builder-vim-source-view-visual-block
{
}

IdeSourceView {
  gtk-key-bindings: builder-vim-source-view;
}

IdeSourceViewMode.vim-normal {
  gtk-key-bindings: builder-vim-source-view, builder-vim-source-view-normal;
}

IdeSourceViewMode.vim-normal-g {
  gtk-key-bindings: builder-vim-source-view, builder-vim-source-view-normal-g;
}

IdeSourceViewMode.vim-normal-y {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-normal-y;
}

IdeSourceViewMode.vim-normal-z {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-normal-z;
}

IdeSourceViewMode.vim-insert {
  gtk-key-bindings: builder-vim-source-view, builder-vim-source-view-insert;
}

IdeSourceViewMode.vim-visual {
  gtk-key-bindings: builder-vim-source-view, builder-vim-source-view-visual;
}
