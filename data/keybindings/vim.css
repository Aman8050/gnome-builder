@binding-set builder-vim-source-view
{
  bind "Escape" { "set-overwrite" (0)
                  "clear-selection" ()
                  "set-mode" ("vim-normal", permanent) };
  bind "<ctrl>bracketleft" { "set-overwrite" (0)
                             "clear-selection" ()
                             "set-mode" ("vim-normal", permanent) };
}

@binding-set builder-vim-source-view-normal
{
  /* insert at cursor */
  bind "i" { "set-mode" ("vim-insert", permanent) };

  /* insert after cursor */
  bind "a" { "set-mode" ("vim-insert", permanent)
             "movement" (next-char, 0) };
  bind "<shift>a" { "set-mode" ("vim-insert", permanent)
                    "movement" (last-char, 0) };

  /* insert at first non-whitespace character */
  bind "<shift>i" { "set-mode" ("vim-insert", permanent)
                    "movement" (first-nonspace-char, 0) };

  /* insert line after current, insert mode */
  bind "o" { "set-mode" ("vim-insert", permanent)
             "movement" (last-char, 0)
             "insert-at-cursor-and-indent" ("\n") };

  /* insert line before current */
  bind "<shift>o" { "set-mode" ("vim-insert", permanent)
                    "movement" (first-char, 0)
                    "insert-at-cursor-and-indent" ("\n")
                    "move-cursor" (display-lines, -1, 0) };

  /* swallow the current character and go to insert */
  bind "s" { "set-mode" ("vim-insert", permanent)
             "movement" (next-char, 1)
             "delete-selection" () };

  /* move by character, captive to current line */
  bind "h" { "movement" (previous-char, 0) };
  bind "l" { "movement" (next-char, 0) };

  /* move by line, keep current line offset */
  bind "k" { "movement" (previous-line, 0) };
  bind "j" { "movement" (next-line, 0) };

  /* move to special sub-mode 'g' */
  bind "g" { "set-mode" ("vim-normal-g", transient ) };

  /* move by word ends */
  bind "e" { "movement" (next-word-end, 0) };
  bind "<shift>e" { "movement" (next-full-word-end, 0) };

  /* move to by word start */
  bind "w" { "movement" (next-word-start, 0) };
  bind "<shift>w" { "movement" (next-full-word-start, 0) };
  bind "b" { "movement" (previous-word-start, 0) };
  bind "<shift>b" { "movement" (previous-full-word-start, 0) };

  /* page movements */
  bind "<ctrl>b" { "movement" (page-up, 0) };
  bind "<ctrl>f" { "movement" (page-down, 0) };
  bind "<ctrl>u" { "movement" (half-page-up, 0) };
  bind "<ctrl>d" { "movement" (half-page-down, 0) };

  /* screen movements, keeping cursor locked to visible region */
  bind "<ctrl>e" { "movement" (screen-up, 0) };
  bind "<ctrl>y" { "movement" (screen-down, 0) };
  bind "z" { "set-mode" ("vim-normal-z", transient) };

  /* move by paragraph */
  bind "braceleft" { "movement" (paragraph-start, 0) };
  bind "braceright" { "movement" (paragraph-end, 0) };

  /* move by sentence */
  bind "parenleft" { "movement" (sentence-start, 0) };
  bind "parenright" { "movement" (sentence-end, 0) };

  /* move to line offset of zero, and first non-whitespace char, end of line */
  bind "0" { "movement" (first-char, 0) };
  bind "<shift>asciicircum" { "movement" (first-nonspace-char, 0) };
  bind "dollar" { "movement" (last-char, 0) };
  bind "bar" { "movement" (nth-char, 0) };

  /* jump to match of brace/bracket/comment/etc */
  bind "percent" { "move-to-matching-bracket" (0) };

  /* move based on visible screen area */
  bind "<shift>h" { "movement" (screen-top, 0) };
  bind "<shift>m" { "movement" (screen-middle, 0) };
  bind "<shift>l" { "movement" (screen-bottom, 0) };

  /* move to nth line, defaults to last */
  bind "<shift>g" { "movement" (nth-line, 0) };

  /* undo - todo: how do we land cursor on right spot? */
  bind "u" { "undo" ()
             "clear-selection" () };

  /* redo */
  bind "<ctrl>r" { "redo" () };

  /* overwrite */
  bind "<shift>r" { "set-mode" ("vim-insert", permanent)
                    "set-overwrite" (1) };

 /* jump to sub-mode */
  bind "d" { "set-mode" ("vim-normal-d", transient) };

  /* delete to end of line */
  bind "<shift>d" { "movement" (last-char, 1)
                    "copy-clipboard" ()
                    "delete-selection" () };

  /* delete current char */
  bind "x" { "movement" (next-char, 1)
             "copy-clipboard" ()
             "delete-selection" () };

  /* delete previous char */
  bind "<shift>x" { "movement" (previous-char, 1)
                    "copy-clipboard" ()
                    "delete-selection" () };

  /* join selected lines */
  bind "<shift>j" { "movement" (first-char, 0)
                    "movement" (next-line, 1)
                    "join-lines" ()
                    "movement" (last-char, 0) };

  /* change number */
  bind "<ctrl>a" { "change-number" (1) };
  bind "<ctrl>x" { "change-number" (-1) };

  /* toggle character case */
  bind "asciitilde" { "change-case" (toggle)
                      "movement" (next-char, 0) };

  bind "BackSpace" { "movement" (previous-char, 0) };

  /* copy */
  bind "y" { "set-mode" ("vim-normal-y", transient) };
  bind "<shift>y" { "save-cursor" ()
                    "set-mode" ("vim-visual-line")
                    "copy-clipboard" ()
                    "set-mode" ("vim-normal")
                    "restore-cursor" () };

  /* visual mode transition */
  bind "v" { "movement" (next-char, 1)
             "set-mode" ("vim-visual", permanent) };
  bind "<shift>v" { "movement" (first-char, 0)
                    "movement" (last-char, 1)
                    "set-mode" ("vim-visual-line", permanent) };
  bind "<ctrl>v" { "set-mode" ("vim-visual-block", permanent) };
}

@binding-set builder-vim-source-view-normal-d
{
  bind "d" { "movement" (first-char, 0)
             "movement" (last-char, 1)
             "move-cursor" (visual-positions, 1, 1)
             "copy-clipboard" ()
             "delete-selection" () };
  bind "e" { "movement" (next-word-end, 1)
             "copy-clipboard" ()
             "delete-selection" () };
  bind "<shift>e" { "movement" (next-full-word-end, 1)
                    "copy-clipboard" ()
                    "delete-selection" () };
  bind "w" { "movement" (next-word-start, 1)
             "copy-clipboard" ()
             "delete-selection" () };
  bind "<shift>w" { "movement" (next-full-word-start, 1)
                    "copy-clipboard" ()
                    "delete-selection" () };
  bind "0" { "movement" (first-char, 1)
             "copy-clipboard" ()
             "delete-selection" () };
  bind "<shift>asciicircum" { "movement" (first-nonspace-char, 1)
                              "copy-clipboard" ()
                              "delete-selection" () };
  bind "dollar" { "movement" (last-char, 1)
                  "copy-clipboard" ()
                  "delete-selection" () };
}

@binding-set builder-vim-source-view-normal-z
{
  bind "z" { "movement" (scroll-screen-center, 0) };
  bind "t" { "movement" (scroll-screen-top, 0) };
  bind "b" { "movement" (scroll-screen-bottom, 0) };
}

@binding-set builder-vim-source-view-visual-z
{
  bind "z" { "movement" (scroll-screen-center, 1)
             "set-mode" ("vim-visual", permanent) };
  bind "t" { "movement" (scroll-screen-top, 1)
             "set-mode" ("vim-visual", permanent) };
  bind "b" { "movement" (scroll-screen-bottom, 1)
             "set-mode" ("vim-visual", permanent) };
}

@binding-set builder-vim-source-view-visual-line-z
{
  bind "z" { "movement" (scroll-screen-center, 1)
             "set-mode" ("vim-visual-line", permanent) };
  bind "t" { "movement" (scroll-screen-top, 1)
             "set-mode" ("vim-visual-line", permanent) };
  bind "b" { "movement" (scroll-screen-bottom, 1)
             "set-mode" ("vim-visual-line", permanent) };
}

@binding-set builder-vim-source-view-normal-y
{
  bind "y" { "save-insert-mark" ()
             "movement" (first-char, 0)
             "movement" (last-char, 1)
             "move-cursor" (visual-positions, 1, 1)
             "copy-clipboard" ()
             "selection-theatric" (expand)
             "clear-selection" ()
             "restore-insert-mark" () };
}

@binding-set builder-vim-source-view-normal-g
{
  bind "<shift>i" { "movement" (first-char, 0)
                    "set-mode" ("vim-insert", permanent) };
  bind "e" { "movement" (previous-word-end, 0) };
  bind "<shift>e" { "movement" (previous-full-word-end, 0) };
  bind "g" { "movement" (first-line, 0) };
  bind "j" { "movement" (next-line, 0) };
  bind "m" { "movement" (middle-char, 0) };
}

@binding-set builder-vim-source-view-visual-g
{
  bind "e" { "movement" (previous-word-end, 1)
             "set-mode" ("vim-visual", permanent) };
  bind "<shift>e" { "movement" (previous-full-word-end, 1)
                    "set-mode" ("vim-visual", permanent) };
  bind "g" { "movement" (first-line, 1)
             "set-mode" ("vim-visual", permanent) };
  bind "j" { "movement" (next-line, 1)
             "set-mode" ("vim-visual", permanent) };
  bind "m" { "movement" (middle-char, 1)
             "set-mode" ("vim-visual", permanent) };
}

@binding-set builder-vim-source-view-visual-line-g
{
  bind "e" { "movement" (previous-word-end, 1)
             "movement" (last-char, 1)
             "set-mode" ("vim-visual-line", permanent) };
  bind "<shift>e" { "movement" (previous-full-word-end, 1)
                    "movement" (last-char, 1)
                    "set-mode" ("vim-visual-line", permanent) };
  bind "g" { "movement" (first-line, 1)
             "movement" (last-char, 1)
             "set-mode" ("vim-visual-line", permanent) };
  bind "j" { "movement" (next-line, 1)
             "movement" (last-char, 1)
             "set-mode" ("vim-visual-line", permanent) };
}

@binding-set builder-vim-source-view-insert
{
  bind "<ctrl>u" { "movement" (first-nonspace-char, 1)
                   "delete-selection" () };
  bind "<ctrl>w" { "movement" (previous-word-start, 1)
                   "copy-clipboard" ()
                   "delete-selection" () };
  bind "<ctrl>n" { "cycle-completion" (down) };
  bind "<ctrl>p" { "cycle-completion" (up) };

  bind "<ctrl>e" { "movement" (screen-up, 0) };
  bind "<ctrl>y" { "movement" (screen-down, 0) };
}

@binding-set builder-vim-source-view-visual
{
  bind "percent" { "move-to-matching-bracket" (1) };

  bind "x" { "delete-selection" () };
  bind "<shift>x" { "delete-selection" () };

  bind "h" { "movement" (previous-char, 1) };
  bind "l" { "movement" (next-char, 1) };
  bind "k" { "movement" (previous-line, 1) };
  bind "j" { "movement" (next-line, 1) };

  bind "e" { "movement" (next-word-end, 1) };
  bind "<shift>e" { "movement" (next-full-word-end, 1) };

  bind "w" { "movement" (next-word-start, 1) };
  bind "<shift>w" { "movement" (next-full-word-start, 1) };
  bind "b" { "movement" (previous-word-start, 1) };
  bind "<shift>b" { "movement" (previous-full-word-start, 1) };

  bind "<ctrl>b" { "movement" (page-up, 1) };
  bind "<ctrl>f" { "movement" (page-down, 1) };
  bind "<ctrl>u" { "movement" (half-page-up, 1) };
  bind "<ctrl>d" { "movement" (half-page-down, 1) };

  bind "0" { "movement" (first-char, 1) };
  bind "<shift>asciicircum" { "movement" (first-nonspace-char, 1) };
  bind "dollar" { "movement" (last-char, 1) };
  bind "bar" { "movement" (nth-char, 1) };

  bind "<shift>h" { "movement" (screen-top, 1) };
  bind "<shift>m" { "movement" (screen-middle, 1) };
  bind "<shift>l" { "movement" (screen-bottom, 1) };

  bind "braceleft" { "movement" (paragraph-start, 1) };
  bind "braceright" { "movement" (paragraph-end, 1) };

  bind "parenleft" { "movement" (sentence-start, 1) };
  bind "parenright" { "movement" (sentence-end, 1) };

  bind "<ctrl>e" { "movement" (screen-up, 1) };
  bind "<ctrl>y" { "movement" (screen-down, 1) };

  bind "g" { "set-mode" ("vim-visual-g", transient) };
  bind "z" { "set-mode" ("vim-visual-z", transient) };
}

@binding-set builder-vim-source-view-visual-line
{
  bind "j" { "movement" (next-line, 1) };

  bind "k" { "movement" (previous-line, 1) };

  bind "x"        { "copy-clipboard" ()
                    "delete-selection" ()
                    "delete-from-cursor" (chars, 1)
                    "set-mode" ("vim-normal", permanent) };

  bind "<shift>x" { "copy-clipboard" ()
                    "delete-selection" ()
                    "delete-from-cursor" (chars, 1)
                    "set-mode" ("vim-normal", permanent) };

  bind "y"        { "copy-clipboard" ()
                    "selection-theatric" (expand)
                    "clear-selection" ()
                    "set-mode" ("vim-normal", permanent) };

  bind "<shift>y" { "copy-clipboard" ()
                    "selection-theatric" (expand)
                    "clear-selection" ()
                    "set-mode" ("vim-normal", permanent) };

  bind "<shift>j" { "join-lines" ()
                    "selection-theatric" (expand)
                    "clear-selection" ()
                    "movement" (last-char, 0)
                    "set-mode" ("vim-normal", permanent) };

  bind "asciitilde" { "selection-theatric" (expand)
                      "change-case" (toggle)
                      "clear-selection" ()
                      "set-mode" ("vim-normal", permanent) };

  bind "<shift>u" { "selection-theatric" (expand)
                    "change-case" (upper)
                    "clear-selection" ()
                    "set-mode" ("vim-normal", permanent) };
  bind "u" { "selection-theatric" (expand)
             "change-case" (lower)
             "clear-selection" ()
             "set-mode" ("vim-normal", permanent) };

  bind "braceleft" { "movement" (paragraph-start, 1)
                     "movement" (last-char, 1) };
  bind "braceright" { "movement" (paragraph-end, 1)
                      "movement" (last-char, 1) };

  bind "parenleft" { "movement" (sentence-start, 1)
                     "movement" (last-char, 1) };
  bind "parenright" { "movement" (sentence-end, 1)
                      "movement" (last-char, 1) };

  bind "<ctrl>e" { "movement" (screen-up, 1) };
  bind "<ctrl>y" { "movement" (screen-down, 1) };
}

@binding-set builder-vim-source-view-visual-block
{
}

@binding-set builder-vim-tree-view
{
  bind "<ctrl>n" { "move-cursor" (logical-positions, 1) };
  bind "<ctrl>p" { "move-cursor" (logical-positions, -1) };
}

IdeSourceViewMode.default,
IdeSourceViewMode.vim-normal {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-normal;
}

IdeSourceViewMode.vim-normal-d {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-normal-d;
}

IdeSourceViewMode.vim-normal-g {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-normal-g;
}

IdeSourceViewMode.vim-normal-y {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-normal-y;
}

IdeSourceViewMode.vim-normal-z {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-normal-z;
}

IdeSourceViewMode.vim-insert {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-insert;
}

IdeSourceViewMode.vim-visual {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-visual;
}

IdeSourceViewMode.vim-visual-g {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-visual-g;
}

IdeSourceViewMode.vim-visual-z {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-visual-z;
}

IdeSourceViewMode.vim-visual-line {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-visual-line;
}

IdeSourceViewMode.vim-visual-line-g {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-visual-line-g;
}

IdeSourceViewMode.vim-visual-line-z {
  gtk-key-bindings: builder-vim-source-view,
                    builder-vim-source-view-visual-line-z;
}

IdeSourceViewMode.vim-visual-block {
  gtk-key-bindings: builder-vim-source-view, builder-vim-source-view-visual-block;
}

GtkTreeView {
  gtk-key-bindings: builder-vim-tree-view;
}
